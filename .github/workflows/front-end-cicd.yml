name: Multi-Environment Website Deployment

on:
  push:
    branches:
      - develop
      - staging
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stg
          - prod

env:
  AWS_REGION: 'eu-north-1'
  SOURCE_DIR: 'website'

jobs:
  determine_environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      s3_bucket: ${{ steps.set-env.outputs.s3_bucket }}
      cf_distribution_id: ${{ steps.set-env.outputs.cf_distribution_id }}
    steps:
      - id: set-env
        run: |
          # Set environment based on trigger
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ENV="${{ github.event.inputs.environment }}"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            ENV="prod"
          elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            ENV="stg"
          else
            ENV="dev"
          fi
          echo "environment=$ENV" >> $GITHUB_OUTPUT
          
          # Set environment-specific values
          if [ "$ENV" == "prod" ]; then
            echo "s3_bucket=cloud-resume-aleksander" >> $GITHUB_OUTPUT
            echo "cf_distribution_id=${{ secrets.PROD_CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_OUTPUT
          elif [ "$ENV" == "stg" ]; then
            echo "s3_bucket=stg-cloud-resume-aleksander" >> $GITHUB_OUTPUT
            
            # Fallback auf DEV_CLOUDFRONT, wenn STG noch nicht existiert
            STG_ID="${{ secrets.STG_CLOUDFRONT_DISTRIBUTION_ID }}"
            if [ -z "$STG_ID" ]; then
              echo "⚠️ Warnung: STG_CLOUDFRONT_DISTRIBUTION_ID nicht gefunden. Verwende DEV als Fallback."
              echo "cf_distribution_id=${{ secrets.DEV_CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_OUTPUT
            else
              echo "cf_distribution_id=$STG_ID" >> $GITHUB_OUTPUT
            fi
          else
            echo "s3_bucket=dev-cloud-resume-aleksander" >> $GITHUB_OUTPUT
            echo "cf_distribution_id=${{ secrets.DEV_CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: determine_environment
    runs-on: ubuntu-latest
    environment: ${{ needs.determine_environment.outputs.environment }}
    steps:
      # 1. Check out the repository
      - uses: actions/checkout@v3

      # 2. Show deployment info
      - name: Show deployment info
        run: |
          echo "Deploying to environment: ${{ needs.determine_environment.outputs.environment }}"
          echo "S3 bucket: ${{ needs.determine_environment.outputs.s3_bucket }}"
          echo "CloudFront distribution: ${{ needs.determine_environment.outputs.cf_distribution_id }}"

      # 3. Sync files to S3
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ needs.determine_environment.outputs.s3_bucket }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: ${{ env.SOURCE_DIR }}
      
      # 4. Configure AWS credentials for CloudFront invalidation
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 5. Invalidate CloudFront distribution
      - name: Invalidate CloudFront
        run: |
          # Überprüfe, ob eine Distribution-ID vorhanden ist
          if [ -n "${{ needs.determine_environment.outputs.cf_distribution_id }}" ]; then
            aws cloudfront create-invalidation --distribution-id ${{ needs.determine_environment.outputs.cf_distribution_id }} --paths "/*"
          else
            echo "⚠️ Keine CloudFront Distribution-ID gefunden, überspringe Invalidierung"
          fi